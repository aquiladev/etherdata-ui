{"version":3,"sources":["components/BlockStatChart.js","components/TokenStatView.js","App.js","serviceWorker.js","index.js"],"names":["formatXAxis","tick","moment","format","formatYAxisDefault","BlockStatChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tabs","selectTab","bind","assertThisInitialized","setState","id","title","dataKey","selected","color","t","Math","pow","toFixed","map","objectSpread","_this2","_this$props","classes","data","length","react_default","a","createElement","Fragment","className","panel","selectedStyle","background","Box","key","tab","style","onClick","ResponsiveContainer_default","width","height","LineChart_default","margin","bottom","XAxis_default","tickFormatter","fontSize","YAxis_default","yAxisId","orientation","stroke","CartesianGrid_default","vertical","strokeDasharray","Tooltip_default","Line_default","type","dot","r","Component","withStyles","theme","marginBottom","display","flexDirection","defineProperty","cursor","padding","spacing","unit","opacity","breakpoints","up","TokenStatView","handleChangePage","_","page","rowsPerPage","_this$state","Table_default","TableHead_default","TableRow_default","TableCell_default","cell","TableBody_default","slice","i","row","component","scope","Link_default","href","target","rel","n","tf_c","TablePagination_default","count","rowsPerPageOptions","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","dotenv","config","App","blocks30","blocks","tokens30","tokens365","tokens","filter","fetch","concat","process","mode","then","response","json","init","event","value","now","Date","filterTime","setDate","getDate","x","d","_this$state2","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","Typography_default","variant","noWrap","layout","Paper_default","paper","paperTop","Select_default","onChange","name","MenuItem_default","components_BlockStatChart","getBlocks","Grid_default","container","item","xs","sm","components_TokenStatView","getTokens","footer","getFullYear","marginLeft","marginRight","marginTop","paddingRight","textAlign","paddingTop","paddingBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.368e5ecb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport LineChart from 'recharts/lib/chart/LineChart';\nimport Line from 'recharts/lib/cartesian/Line';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport { unstable_Box as Box } from '@material-ui/core/Box';\nimport moment from 'moment';\n\nconst styles = theme => ({\n  panel: {\n    marginBottom: 25,\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  tab: {\n    cursor: 'pointer',\n    padding: theme.spacing.unit * 2,\n    opacity: 0.7,\n    [theme.breakpoints.up(700 + theme.spacing.unit * 3 * 2)]: {\n      padding: theme.spacing.unit * 3\n    },\n  }\n});\n\nfunction formatXAxis(tick) {\n  return moment(tick).format('MMM D YY');\n}\n\nfunction formatYAxisDefault(tick) {\n  return tick;\n}\n\nclass BlockStatChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tabs: []\n    };\n\n    this.selectTab = this.selectTab.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      tabs: [\n        {\n          id: 0,\n          title: 'Blocks',\n          dataKey: 'c',\n          selected: true,\n          color: '#DB4437',\n          format: formatYAxisDefault\n        },\n        {\n          id: 1,\n          title: 'Difficulty',\n          dataKey: 'a_d',\n          selected: false,\n          color: '#F6BF26',\n          format: (t) => t + 'G'\n        },\n        {\n          id: 2,\n          title: 'Transactions',\n          dataKey: 'tx_c',\n          selected: false,\n          color: '#0F9D58',\n          format: (t) => (t / 1000) + 'K'\n        },\n        {\n          id: 3,\n          title: 'Gas',\n          dataKey: 'g_u',\n          selected: false,\n          color: '#1A73E8',\n          format: (t) => (t / 1000000000) + 'B'\n        },\n        {\n          id: 4,\n          title: 'Size',\n          dataKey: 's',\n          selected: false,\n          color: '#9E9E9E',\n          format: (t) => (t / Math.pow(1024, 2)).toFixed(1) + 'M'\n        }\n      ]\n    });\n  }\n\n  selectTab(id) {\n    const { tabs } = this.state;\n\n    this.setState({\n      tabs: tabs.map(t => {\n        if (t.id !== id) {\n          return t;\n        }\n\n        return { ...t, selected: !t.selected };\n      })\n    });\n  }\n\n  render() {\n    const { classes, data } = this.props;\n\n    if (!data || data.length === 0) {\n      return (\n        <div>No data</div>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        <div className={classes.panel}>\n          {\n            this.state.tabs.map((t) => {\n              const selectedStyle = t.selected ? { background: t.color } : null;\n              return (\n                <Box\n                  key={t.id}\n                  className={classes.tab}\n                  style={selectedStyle}\n                  onClick={() => { this.selectTab(t.id) }} >\n                  {t.title}\n                </Box>\n              );\n            })\n          }\n        </div>\n        {/* 99% per https://github.com/recharts/recharts/issues/172 */}\n        <ResponsiveContainer width='99%' height={320}>\n          <LineChart data={data} margin={{ bottom: 20 }}>\n            <XAxis\n              dataKey='d'\n              tickFormatter={formatXAxis}\n              height={20}\n              style={{ fontSize: 10 }} />\n            {\n              this.state.tabs.map((t) => {\n                if (!t.selected) {\n                  return null;\n                }\n\n                return (\n                  <YAxis\n                    key={t.id}\n                    yAxisId={t.id}\n                    orientation='left'\n                    stroke={t.color}\n                    tickFormatter={t.format}\n                    width={40}\n                    style={{ fontSize: 10 }} />\n                );\n              })\n            }\n            <CartesianGrid vertical={false} strokeDasharray='3 3' />\n            <Tooltip />\n            {\n              this.state.tabs.map((t) => {\n                if (!t.selected) {\n                  return null;\n                }\n\n                return (\n                  <Line\n                    key={t.id}\n                    type='monotone'\n                    dataKey={t.dataKey}\n                    dot={{ r: 0 }}\n                    stroke={t.color}\n                    yAxisId={t.id} />\n                );\n              })\n            }\n          </LineChart>\n        </ResponsiveContainer>\n      </React.Fragment>\n    );\n  }\n}\n\nBlockStatChart.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.array\n};\n\nexport default withStyles(styles)(BlockStatChart);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Link from '@material-ui/core/Link';\n\nconst styles = theme => ({\n  row: {\n    height: 36\n  },\n  cell: {\n    padding: 0\n  }\n});\n\nclass TokenStatView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      rowsPerPage: 10\n    };\n\n    this.handleChangePage = this.handleChangePage.bind(this);\n  }\n\n  handleChangePage = (_, page) => {\n    this.setState({ page });\n  };\n\n  render() {\n    const { data, classes } = this.props;\n    const { page, rowsPerPage } = this.state;\n\n    return (\n      <React.Fragment>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell className={classes.cell}>Token</TableCell>\n              <TableCell className={classes.cell}>Transfers</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              data\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((t, i) => (\n                  <TableRow key={i} className={classes.row}>\n                    <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\n                      <Link href={'https://etherscan.io/address/' + t.a}\n                        color=\"inherit\"\n                        target=\"_blank\"\n                        rel=\"noopener\">\n                        {t.n || t.a}\n                      </Link>\n                    </TableCell>\n                    <TableCell className={classes.cell}>{t.tf_c}</TableCell>\n                  </TableRow>\n                ))\n            }\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[rowsPerPage]}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nTokenStatView.propTypes = {\n  classes: PropTypes.object.isRequired,\n  data: PropTypes.array\n};\n\nexport default withStyles(styles)(TokenStatView);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport dotenv from 'dotenv';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nimport BlockStatChart from './components/BlockStatChart';\nimport TokenStatView from './components/TokenStatView';\n\ndotenv.config();\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 1000,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit,\n      marginBottom: theme.spacing.unit * 4,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  paperTop: {\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 4,\n      marginBottom: theme.spacing.unit * 4,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  filter: {\n    paddingRight: 15\n  },\n  footer: {\n    textAlign: 'center',\n    paddingTop: theme.spacing.unit * 3,\n    paddingBottom: theme.spacing.unit * 2\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      blocks30: [],\n      blocks: [],\n      tokens30: [],\n      tokens365: [],\n      tokens: [],\n      filter: 30\n    };\n\n    this.filter = this.filter.bind(this);\n  }\n\n  init() {\n    fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v0.1/blocks/stat30`, { mode: 'cors' })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ blocks30: data });\n\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v0.1/blocks/stat`, { mode: 'cors' })\n          .then(response => response.json())\n          .then(data => this.setState({ blocks: data }));\n      });\n\n    fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v0.1/tokens/usage30`, { mode: 'cors' })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ tokens30: data });\n\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v0.1/tokens/usage365`, { mode: 'cors' })\n          .then(response => response.json())\n          .then(data => this.setState({ tokens365: data }));\n\n        fetch(`${process.env.REACT_APP_API_ENDPOINT}/api/v0.1/tokens/usage`, { mode: 'cors' })\n          .then(response => response.json())\n          .then(data => this.setState({ tokens: data }));\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  filter(event) {\n    this.setState({\n      filter: event.target.value\n    });\n  }\n\n  getBlocks() {\n    const { filter, blocks, blocks30 } = this.state;\n    switch (filter) {\n      case 0:\n      case 365:\n        let data = blocks;\n        if (filter) {\n          const now = new Date();\n          const filterTime = (new Date()).setDate(now.getDate() - filter);\n          data = blocks.filter(x => new Date(x.d) >= filterTime)\n        }\n        return data;\n      default:\n        return blocks30;\n    }\n  }\n\n  getTokens() {\n    const { filter, tokens, tokens30, tokens365 } = this.state;\n    switch (filter) {\n      case 0:\n        return tokens;\n      case 365:\n        return tokens365;\n      default:\n        return tokens30;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Etherdata\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <main className={classes.layout}>\n          <Paper className={classes.paper + ' ' + classes.paperTop}>\n            <span className={classes.filter}>Filter</span>\n            <Select\n              value={this.state.filter}\n              onChange={this.filter}\n              name=\"filter\"\n            >\n              <MenuItem value={30}>Last 30 days</MenuItem>\n              <MenuItem value={365}>Last year</MenuItem>\n              <MenuItem value={0}>All time</MenuItem>\n            </Select>\n          </Paper>\n          <Paper className={classes.paper}>\n            <BlockStatChart data={this.getBlocks()} />\n          </Paper>\n          <Grid container spacing={24}>\n            <Grid item xs={12} sm={6}>\n              <Paper className={classes.paper}>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                  Most used tokens\n                </Typography>\n                <TokenStatView data={this.getTokens()} />\n              </Paper>\n            </Grid>\n          </Grid>\n        </main>\n        <div className={classes.footer}>\n          <div>\n            Etherdata is a Analytics Platform for Ethereum\n          </div>\n          <div>\n            <span>©</span> {(new Date()).getFullYear()} Etherdata | <Link href={process.env.REACT_APP_GITHUB}>GitHub</Link>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}